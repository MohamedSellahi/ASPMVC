@*model directive for strongly typed views*@

@model PartyIvites.Models.GuestResponse

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>RsvpForm</title>
</head>
<body>
    <div>
        @*BeginForm: generate form for postback*@
        @*Using ensures disposal of abjects not managed by CLR when going 
        outpf scope: example if this form is to be used to communicate 
        with a database*@

        @using (Html.BeginForm()) {
           @*<p>Your Name:@Html.TextBox("Name")</p>*@
           
           @Html.ValidationSummary() @* will be diplayed only as a response to validation 
                                         errors *@

           <p>Your Name: @Html.TextBoxFor(x=>x.Name)</p>
           <p>Your email: @Html.TextBoxFor(x=>x.Email)</p>
           <p>Your Phone: @Html.TextBoxFor(x=>x.Phone)</p>
           <p>
               Will you attend?
               @Html.DropDownListFor(x=>x.WillAttend, new[] {
             new SelectListItem(){Text="Yes, I'll be there", Value = bool.TrueString},
             new SelectListItem(){Text="No, I can't come", Value=bool.FalseString}
          },"Choose an option")
           </p>
           <input type="submit" value="Submit RSVP"/>
        }

    </div>
</body>
</html>
